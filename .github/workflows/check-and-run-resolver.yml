name: Check and Run Resolver

on:
  schedule:
    # Run multiple times per day to check if data is available
    # These times are in UTC (Europe/Athens is UTC+3 during summer, UTC+2 during winter)
    # 15:00, 16:00, 17:00, 18:00 UTC = 18:00, 19:00, 20:00, 21:00 Europe/Athens time
    - cron: '0 15,16,17,18 * * *'
  workflow_dispatch:
    inputs:
      date:
        description: 'Date to check (YYYY-MM-DD)'
        required: false
        default: ''

jobs:
  check-artifact-exists:
    name: Check London Highest Temperature Artifact
    runs-on: ubuntu-latest
    outputs:
      artifact_exists: ${{ steps.check-artifact.outputs.artifact_exists }}
      date: ${{ steps.set-date.outputs.date }}
    steps:
      - name: Calculate default DATE (yesterday)
        if: ${{ github.event.inputs.date == '' || github.event.inputs.date == null }}
        id: calculate-date
        run: |
          echo "DATE=$(date -d 'yesterday' +'%Y-%m-%d')" >> $GITHUB_ENV
        shell: bash

      - name: Set DATE from input or fallback
        if: ${{ github.event.inputs.date != '' && github.event.inputs.date != null }}
        run: echo "DATE=${{ github.event.inputs.date }}" >> $GITHUB_ENV

      - name: Set output date
        id: set-date
        run: echo "date=$DATE" >> $GITHUB_OUTPUT

      - name: Check if artifact exists
        id: check-artifact
        uses: actions/github-script@v7
        env:
          DATE: ${{ env.DATE }}
        with:
          script: |
            const date = process.env.DATE;
            const artifactName = `london_highest_temperature_daily_${date}`;
            
            console.log(`Checking for artifact: ${artifactName}`);
            
            const { repo, owner } = context.repo;
            
            try {
              // Check all workflow runs, not just from run-resolver.yml
              let allWorkflowRuns = [];
              
              // Get runs from run-resolver.yml
              const resolverRuns = await github.rest.actions.listWorkflowRuns({
                owner,
                repo,
                workflow_id: 'run-resolver.yml',
                status: 'success'
              });
              allWorkflowRuns = allWorkflowRuns.concat(resolverRuns.data.workflow_runs);
              
              // Get runs from check-and-run-resolver.yml (this workflow)
              const checkerRuns = await github.rest.actions.listWorkflowRuns({
                owner,
                repo,
                workflow_id: 'check-and-run-resolver.yml',
                status: 'success'
              });
              allWorkflowRuns = allWorkflowRuns.concat(checkerRuns.data.workflow_runs);
              
              console.log(`Checking ${allWorkflowRuns.length} workflow runs for artifact`);
              
              // For each workflow run, check if it has our artifact
              let artifactExists = false;
              
              for (const run of allWorkflowRuns) {
                const artifacts = await github.rest.actions.listWorkflowRunArtifacts({
                  owner,
                  repo,
                  run_id: run.id
                });
                
                console.log(`Checking run ${run.id} (${run.name}), found ${artifacts.data.artifacts.length} artifacts`);
                
                // Log all artifact names for debugging
                artifacts.data.artifacts.forEach(artifact => {
                  console.log(`  - Artifact: ${artifact.name}`);
                });
                
                const found = artifacts.data.artifacts.some(artifact => 
                  artifact.name === artifactName
                );
                
                if (found) {
                  console.log(`Found artifact ${artifactName} in workflow run ${run.id}`);
                  artifactExists = true;
                  break;
                }
              }
              
              console.log(`Artifact exists: ${artifactExists}`);
              core.setOutput('artifact_exists', artifactExists.toString());
            } catch (error) {
              console.error(`Error checking for artifact: ${error}`);
              core.setOutput('artifact_exists', 'false');
            }

  # Commented out for testing artifact detection logic
  # trigger-resolver:
  #   name: Trigger London Highest Temperature for ${{ needs.check-artifact-exists.outputs.date }}
  #   needs: check-artifact-exists
  #   if: ${{ needs.check-artifact-exists.outputs.artifact_exists == 'false' }}
  #   uses: ./.github/workflows/run-resolver.yml
  #   with:
  #     date: ${{ needs.check-artifact-exists.outputs.date }}
  
  # Add a debug job to output the artifact detection results
  debug-output:
    name: Debug Artifact Detection Results
    needs: check-artifact-exists
    runs-on: ubuntu-latest
    steps:
      - name: Output detection results
        run: |
          echo "Date checked: ${{ needs.check-artifact-exists.outputs.date }}"
          echo "Artifact exists: ${{ needs.check-artifact-exists.outputs.artifact_exists }}"
          if [ "${{ needs.check-artifact-exists.outputs.artifact_exists }}" == "true" ]; then
            echo "✅ Artifact was found - resolver would NOT be triggered"
          else
            echo "❌ Artifact was NOT found - resolver would be triggered"
          fi
